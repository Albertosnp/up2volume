{"version":3,"sources":["utils/Firebase.js","components/Auth/AuthOptions/AuthOptions.js","services/apiConnection.js","utils/Validations.js","components/Auth/RegisterForm/RegisterForm.js","components/Auth/LoginForm/LoginForm.js","assets/png/fondo.png","assets/jpg/background-auth.jpg","assets/png/logo-blanco.png","pages/Auth/Auth.js","components/Albums/HeaderAlbum/HeaderAlbum.js","components/Songs/ListSongs/ListSongs.js","pages/Album/Album.js","pages/Albums/Albums.js","components/Artists/AvatarArtist/AvatarArtist.js","components/Artists/BannerArtist/BannerArtist.js","components/Sliders/RenderItems/RenderItemArtist/RenderItemArtist.js","components/Sliders/RenderItems/RenderItem/RenderItem.js","components/Sliders/BasicSliderItems/BasicSliderItems.js","components/Sliders/SongsSlider/SongsSlider.js","utils/Api.js","pages/Artist/Artist.js","pages/Artists/Artists.js","utils/AlertError.js","components/BannerHome/BannerHome.js","pages/Home/Home.js","assets/png/user.png","components/Settings/UploadAvatar.js","components/Settings/UserName.js","components/Modal/BasicModal/BasicModal.js","components/Settings/UserEmail.js","components/Settings/UserPassword.js","pages/Settings/Settings.js","routes/Routes.js","assets/png/no-image.png","components/Albums/AddAlbumForm/AddAlbumForm.js","components/Artists/AddArtistForm/Dropzone.js","assets/png/no-avatar.png","assets/png/no-banner.png","components/Artists/AddArtistForm/AddArtistForm.js","components/Songs/AddSongForm/AddSongForm.js","components/MenuLeft/MenuLeft.js","components/TopBar/TopBar.js","components/Player/Player.js","layouts/LoggedLayout/LoggedLayout.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","AuthOptions","setSelectedForm","className","Button","primary","onClick","bbdd","fireBase","firestore","logOutApi","auth","signOut","sendEmailVerificationApi","currentUser","sendEmailVerification","then","toast","success","catch","error","getAlbumsOfArtistApi","id_artist","collection","where","get","getAllOfArtistApi","uploadFileApi","idFile","file","storage","ref","child","put","uploadDataSongApi","name","album","date","Timestamp","fromDate","Date","add","fileName","artist","getUrlAvatarApi","url","getDownloadURL","getArtistDepensItemApi","item","doc","getAlbumDepensIdApi","id_album","updateUserAvatarApi","urlAvatar","updateProfile","photoURL","reAuthenticateApi","password","user","credentials","EmailAuthProvider","credential","email","reauthenticateWithCredential","updateEmailApi","updateEmail","downloadBannersApi","getImageApi","uploadGenericImageApi","uploadArtistApi","uidImageBanner","uidImageAvatar","banner","avatar","uploadAlbumApi","isValidateEmail","test","String","toLowerCase","INITIAL_FORM","userName","RegisterForm","useState","formData","setFormData","showPassword","setShowPassword","formError","setFormError","isLoading","setIsLoading","handlerShowPassword","changeUserName","displayName","Form","onSubmit","event","preventDefault","errors","formOk","length","trim","createUserWithEmailAndPassword","finally","onChange","target","value","Field","Input","type","placeholder","icon","Icon","link","loading","ButtonReSendEmailVerification","setUserActive","handlerErrors","code","warning","LoginForm","userActive","setUser","signInWithEmailAndPassword","response","emailVerified","Auth","selectedForm","style","backgroundImage","BackGroundAuth2","src","LogoNameWhite","alt","handlerForm","HeaderAlbum","to","id","ListSongs","songs","playerSong","title","userAdmin","useEffect","Table","inverted","Body","map","song","Song","avatarUrl","setAvatarUrl","setElementInfo","getImage","a","console","log","fetchMyAPI","data","onPlay","params","Row","Cell","collapsing","id_song","delete","withRouter","match","setAlbum","setUrlAvatar","setArtist","setSongs","arraySongs","docs","push","Loader","active","Albums","albumes","setAlbumes","albums","arrayAlbums","objectAlbum","Grid","Column","mobile","tablet","computer","Album","setImages","avatarAlbum","AvatarArtist","BannerArtist","bannerUrl","setBannerUrl","RenderItemArtist","folderImage","urlName","setAvatar","Card","image","RenderItem","BasicSliderItems","infinite","centerPadding","slidesToShow","swipeToSlide","responsive","breakpoint","settings","slidesToScroll","initialSlide","object","SongsSlider","elementInfo","firebaseApp","isUserAdmin","uid","exists","setAlbums","singles","setSingles","allSongs","setAllSongs","arraySingles","Artists","artists","setArtists","arrayArtists","Artist","alertErrors","typeOfError","BannerHome","bannerUrls","setBannerUrls","banner1","banner2","banner3","banner4","banner5","getUrl","autoplay","speed","autoplaySpeed","cssEase","Image","Home","orderBy","limit","UploadAvatar","setReloadApp","photoUrl","onDrop","useCallback","acceptedFiles","isGoodSize","size","URL","createObjectURL","id_user","uploadImageApi","updateUserAvatar","useDropzone","accept","noKeyboard","getRootProps","getInputProps","isDragActive","prevState","AvatarDefault","UserName","setShowModal","setTitleModal","setContentModal","circular","ChangeDisplayNameForm","setName","updateNameUser","defaultValue","e","BasicModal","show","setShow","children","onClose","Modal","open","Header","Content","UserEmail","ChangeEmailForm","isVisible","setIsVisible","handlerChange","isValidEmail","isEqual","UserPassword","ChangePasswordForm","handlerShowPass","currentPassword","newPass1","newPass2","checkPasswords","pass","updatePassword","Settings","showModal","titleModal","contentModal","Routes","setUserAdmin","path","exact","FORM_INITIAL_VALUE","AddAlbumForm","imgAlbum","setImgAlbum","setFile","artistMod","key","text","acceptedFile","fileUploated","handlerSubmit","uuidv4","resetForm","Group","width","NoImage","Dropdown","fluid","search","selection","lazyLoad","options","Dropzone","setUrl","classNameField","classNameDiv","setWholeFile","imageDefault","content","AddArtistForm","initialForm","fileBanner","setFileBanner","fileAvatar","setFileAvatar","preview","urlBanner","setUrlBanner","styleBanner","NoImageBanner","styleAvatar","NoImageAvatar","styleMod","AddSongForm","idFileSong","location","pathname","activeMenu","setActiveMenu","handlerMenu","menu","handlerModal","Menu","vertical","Item","as","Link","history","trigger","UserImage","goBack","Player","songData","playedSeconds","setPlayedSeconds","totalSeconds","setTotalSeconds","playing","setPlaying","volume","setVolume","duration","setDuration","seconds","setSeconds","minutes","setMinutes","totalMinutes","setTotalMinutes","onStart","Progress","progress","total","toString","replace","label","max","min","step","Number","height","onProgress","toFixed","prev","loadedSeconds","onDuration","decimal","entero","Math","floor","LoggedLayout","setSongData","songName","idSong","getUrlSongApi","App","onAuthStateChanged","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","draggable","pauseOnHover","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.903708b6.chunk.js","sourcesContent":["import firebase from 'firebase/app';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCWolFiWx9UQ_hZjj3U2r1oc5x0heFVoI8\",\n    authDomain: \"up2volume-4cbef.firebaseapp.com\",\n    projectId: \"up2volume-4cbef\",\n    storageBucket: \"up2volume-4cbef.appspot.com\",\n    messagingSenderId: \"430745477952\",\n    appId: \"1:430745477952:web:762ccae468a4f04c0690a5\"\n};\n\n// Initialize Firebase\nexport default firebase.initializeApp(firebaseConfig);","import React from 'react';\nimport { Button } from 'semantic-ui-react';\n\nimport \"./AuthOptions.scss\";\n\nconst AuthOptions = ({ setSelectedForm }) => {\n\n    return (\n        <div className=\"auth-options\">\n            <h2>La comunidad de música libre</h2>\n            <Button primary className=\"register\" onClick={ () => setSelectedForm(\"register\") }>\n                Registrarse gratis\n            </Button>\n            <Button primary className=\"login\" onClick={ () => setSelectedForm(\"login\") }>\n                Iniciar sesión\n            </Button>\n        </div>\n    )\n}\n\nexport default AuthOptions;","import fireBase from \"../utils/Firebase\"\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nimport firebase from \"firebase\";\nimport { toast } from \"react-toastify\";\n\nconst bbdd = fireBase.firestore(fireBase);\n\n/* ------------------------------------- Cerrar session ------------------------------------ */\nexport const logOutApi = () => {\n    fireBase.auth().signOut();\n};\n\n/* --------------------------------------  Register Form ----------------------------------- */\n//Conecta con Firebase y Registra el nombre de usuario en la bbdd del user actual\nexport const changeUserNameApi = (userName) => {\n    fireBase.auth().currentUser.updateProfile({\n        displayName: userName\n    }).catch(() => toast.error(\"Error al asignar el nombre de usuario.\"))\n};\n\n//Enviar el email para verificar la cuenta \nexport const sendEmailVerificationApi = () => {\n    fireBase.auth().currentUser.sendEmailVerification()\n        .then(() =>\n            toast.success(\"Se ha enviado un email de verificación.\"))\n        .catch(() =>\n            toast.error(\"Error al enviar el email de verificación.\"));\n};\n\n//Registra al usuario en la bbdd\nexport const registerUserFirebaseApi = (email, password) => {\n    return fireBase\n        .auth()\n        .createUserWithEmailAndPassword(email, password)\n};\n\n/* --------------------------------------  Login Form ----------------------------------- */\n\n//Loguea al usuario\nexport const loginUserFirebaseApi = (email, password) => {\n    return fireBase\n        .auth()\n        .signInWithEmailAndPassword(email, password)\n};\n\n/* --------------------------------------  addSong Form ----------------------------------- */\n\n// Obtiene todos los albumes segun el artista seleccionado de la bbdd\nexport const getAlbumsOfArtistApi = (id_artist) => {\n    return bbdd.collection(\"albums\")\n        .where(\"artist\", \"==\", id_artist)\n        .get()\n};\n\n//Obtiene todos los artistas de la bbdd\nexport const getAllOfArtistApi = () => {\n    return bbdd.collection(\"artists\")\n        .get()\n};\n\n//Sube a la bbdd el fichero y devuelve una promesa\nexport const uploadFileApi = (idFile, file) => {\n    const ref = fireBase.storage()\n        .ref()\n        .child(`songs/${idFile}`);\n\n    return ref.put(file);\n};\n\n//Sube a la bbdd la informacion del tema\nexport const uploadDataSongApi = (idFile, name, album, id_artist) => {\n    const date = firebase.firestore.Timestamp.fromDate(new Date());\n    bbdd.collection(\"songs\")\n        .add({\n            name: name,\n            album: album,\n            fileName: idFile,\n            artist: id_artist,\n            date: date\n        })\n};\n\n/* ------------------------------------- Render Item -------------------------------- */\n//Recoge la imagen del item\nexport const getUrlAvatarApi = (url) => {\n    return fireBase\n        .storage()\n        .ref(url)\n        .getDownloadURL()\n};\n\n/* ------------------------------------- Song Slider -------------------------------- */\n//Obtiene el artista segun el item pasado\nexport const getArtistDepensItemApi = (item) => {\n    return bbdd.collection(\"artists\")\n        .doc(item)\n        .get()\n};\n\n//Obtiene el album segun el id pasado\nexport const getAlbumDepensIdApi = (id_album) => {\n    return bbdd.collection(\"albums\")\n        .doc(id_album)\n        .get()\n};\n\n/* ------------------------------------- Settings -------------------------------- */\n//Sube la imagen a firebase con el uid del usuario a la carpeta/tabla de imagenes\nexport const uploadImageApi = (id_user, file) => {\n    const reference = fireBase\n        .storage()\n        .ref()\n        .child(`avatar/${id_user}`);\n\n    return reference.put(file);\n};\n\n//Actualiza la imagen del usuario en la bbdd de usuarios\nexport const updateUserAvatarApi = (urlAvatar) => {\n    return fireBase\n        .auth()\n        .currentUser\n        .updateProfile({ photoURL: urlAvatar });\n};\n\n//Devuelve el objeto usuario en bruto\nexport const reAuthenticateApi = (password) => {\n    const user = firebase.auth().currentUser; //Objeto firebase distinto\n    const credentials = firebase.auth.EmailAuthProvider.credential(user.email, password);//Objeto firebase distinto\n\n    return user.reauthenticateWithCredential(credentials);\n};\n\n//Actualiza el email del usuario\nexport const updateEmailApi = (email) => {\n    return fireBase.auth()\n        .currentUser\n        .updateEmail(email)\n};\n\n//Actualiza la contraseña del usuario\nexport const updatePasswordApi = (pass) => {\n    return firebase.auth()\n        .currentUser\n        .updatePassword(pass)\n};\n\n//Actualiza el nombre del usuario\nexport const updateNameUser = (name) => {\n    return firebase.auth().currentUser.updateProfile({ displayName: name })\n};\n\n/* ------------------------------------- BannerHome -------------------------------- */\n//Recoge el banner pasado por parametro para home\nexport const downloadBannersApi = (file) => {\n    return fireBase\n        .storage()\n        .ref(`others/${file}`)\n        .getDownloadURL();\n};\n\n/* ---------------------------------- Artists ----------------------------------------- */\n//obtiene la imagen de la url pasada\nexport const getImageApi = (url) => {\n    return fireBase\n        .storage()\n        .ref(url)\n        .getDownloadURL()\n};\n\n//Sube la imagen generica a la bbdd segun la url pasada por parametro\nexport const uploadGenericImageApi = (url, file) => {\n    const reference = fireBase.storage().ref().child(url); //Se crea el uid en la coleccion artists de la bbdd\n    return reference.put(file); //Se sube-asocia la imagen a la bbdd con el uid \n};\n\n//Sube el artista en la coleccion-tabla y asocia la imagen con el uid\nexport const uploadArtistApi = (uidImageBanner, uidImageAvatar, name) => {\n    const date = firebase.firestore.Timestamp.fromDate(new Date());\n    return bbdd.collection(\"artists\").add({\n        name: name,\n        banner: uidImageBanner,\n        avatar: uidImageAvatar,\n        date: date\n    })\n}\n\n//Sube el album completo a la coleccion de albums\nexport const uploadAlbumApi = (name, artist, fileName) => {\n    const date = firebase.firestore.Timestamp.fromDate(new Date());\n    return bbdd.collection(\"albums\")\n        .add({\n            name: name,\n            artist: artist,\n            avatar: fileName,\n            date: date\n        })\n}\n\n/* --------------------------------------------- Logged Layout ------------------------------ */\n//retorna la url de la cancion con id pasado por parametro\nexport const getUrlSongApi = (idSong) => {\n    return fireBase.storage()\n        .ref(`songs/${idSong}`)\n        .getDownloadURL()\n};\n\n/* --------------------------------------------- Album ------------------------------ */\n//retorna los temas segun el album pasado\nexport const getSongsDependsAlbumApi = (id_album) => {\n    return bbdd.collection(\"songs\")\n        .where(\"album\", \"==\", id_album)\n        .get()\n};\n\n//retorna el album con el id pasado\nexport const getAlbumApi = (id_album) => {\n    return bbdd.collection(\"albums\")\n        .doc(id_album)\n        .get()\n};\n\n//Obtiene todos los albumes de la bbdd\nexport const getAllOfAlbumsApi = () => {\n    return bbdd.collection(\"albums\")\n        .get()\n};\n\n//Obtiene los singles del artista\nexport const getSinglesOfArtistApi = (id_artist) => {\n    return bbdd.collection(\"songs\")\n        .where(\"album\", \"==\", \"\")\n        .where(\"artist\", \"==\", id_artist)\n        .get()\n};\n\n//Obtiene los temas segun el album pasado\nexport const getAllSongsForAlbumApi = (id_album) => {\n    return bbdd.collection(\"songs\")\n        .where(\"album\", \"==\", id_album)\n        .get()\n};\n\n/* ------------------------------------------- Home ---------------------------------------------- */\n//Devuelve las ultimas 10 canciones añadidas\nexport const getLast10Songs = () => {\n    return bbdd.collection(\"songs\")\n        .orderBy(\"date\", \"desc\")\n        .limit(10)\n        .get()\n};\n\n//Devuelve los utimos 10 albumes añadidas\nexport const getLast10Albums = () => {\n    return bbdd.collection(\"albums\")\n        .orderBy(\"date\", \"desc\")\n        .limit(10)\n        .get()\n};\n\n//Devuelve los utimos 10 artistas añadidas\nexport const getLast10Artists = () => {\n    return bbdd.collection(\"artists\")\n        .orderBy(\"date\", \"desc\")\n        .limit(10)\n        .get()\n};\n\n/* -------------------------------------- Eliminar ---------------------------------- */\n//Borra el tema pasado por parametro\nexport const deleteDataSongApi = (id_song) => {\n    return bbdd.collection(\"songs\")\n        .doc(id_song)\n        .delete()\n};\n\n//Elimina los ficheros de la storage\nexport const deleteFileSongApi = (id) => {\n    const reference = fireBase\n        .storage()\n        .ref()\n        .child(`songs/${id}`);\n\n    reference.delete()\n    .then(() => toast.success(\"Se ha eliminado con exito\"))\n    .catch(() => toast.warning(\"No se ha podido eliminar el fichero\"))\n};","export function isValidateEmail(email) {\n    // eslint-disable-next-line no-useless-escape\n    const emailValidation = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    // const alternativa = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailValidation.test(String(email).toLowerCase());\n}\n  ","import React, { useState } from 'react';\nimport { Icon, Button, Form, Input } from 'semantic-ui-react';\nimport { toast } from 'react-toastify'\nimport { changeUserNameApi, sendEmailVerificationApi, registerUserFirebaseApi} from '../../../services/apiConnection';\nimport { isValidateEmail } from '../../../utils/Validations';\n\nimport \"./RegisterForm.scss\";\n\n\nconst INITIAL_FORM = {\n    email: '',\n    password: '',\n    userName: ''\n};\n\nconst RegisterForm = ({ setSelectedForm }) => {\n\n    const [formData, setFormData] = useState(INITIAL_FORM);//El valor del formulario se inicia vacio\n    const [showPassword, setShowPassword] = useState(false);\n    const [formError, setFormError] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n\n    //Guarda-Cambia en el estado los valores de los inputs \n    const handlerChange = (event) => {\n        //al cambiar el campo, lo añade con ...spread y sobrescribe el cambiado\n        setFormData({\n            ...formData,\n            [event.target.name]: event.target.value\n        });\n    };\n    //Cambia el estado para mostrar u ocultar password\n    const handlerShowPassword = () => {\n        // showPassword ? setShowPassword(false) : setShowPassword(true); \n        setShowPassword(!showPassword);\n    };\n\n    //Funcion que envia al backend (firebase) el registro de usuario\n    const handlerSubmit = (event) => {\n        event.preventDefault();\n        setFormError({});\n        let errors = {};\n        let formOk = true;\n\n        if (!isValidateEmail(formData.email)) {\n            errors.email = true;\n            formOk = false;\n        }\n        if (formData.password.length < 6) {\n            errors.password = true;\n            formOk = false;\n        }\n        if (!formData.userName.trim()) {\n            errors.userName = true;\n            formOk = false;\n        }\n        //Cambia el estado de los errores para mostralos al usuario\n        setFormError(errors);\n        \n        if (formOk) {\n            //Añade el spinner de cargando\n            setIsLoading(true);\n            registerUserFirebaseApi(formData.email, formData.password)\n                .then(() => {\n                    // toast.success(\"Registro completado\");\n                    changeUserName();\n                    sendEmailVerification();\n                })\n                .catch(( error ) => toast.error(\"Error al crear la cuenta\"))\n                .finally(() => {\n                    setIsLoading(false);\n                    setSelectedForm(null);//Redirecciona al menu de eleccion de formulario (Login - )\n                });    \n        }\n    };\n\n    //Conecta con Firebase y Registra el nombre de usuario en la bbdd del user actual\n    const changeUserName = () => {\n        changeUserNameApi(formData.userName) \n    };\n\n    //Enviar el email para verificar la cuenta \n    const sendEmailVerification = () => {\n        sendEmailVerificationApi()\n    };\n\n    return (\n        <div className=\"register-form\">\n            <h1>Únete a up2volume y escucha música libre.</h1>\n            <Form onSubmit={handlerSubmit} onChange={handlerChange}>\n                <Form.Field>\n                    <Input\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Email\"\n                        icon=\"mail outline\"\n                        value={formData.email}\n                        error={formError.email}\n                    />\n                    {formError.email ?\n                        (<span className=\"error-text\">Por favor, introduce un email válido</span>)\n                        :\n                        \"\"\n                    }\n                </Form.Field>\n                <Form.Field>\n                    <Input\n                        type={showPassword ? \"text\" : \"password\"}\n                        name=\"password\"\n                        placeholder=\"Contraseña\"\n                        icon=\n                        {showPassword ?\n                            (<Icon name=\"eye slash outline\" link onClick={handlerShowPassword} />)\n                            :\n                            (<Icon name=\"eye\" link onClick={handlerShowPassword} />)\n                        }\n                        value={formData.password}\n                        error={formError.password}\n                    />\n                    {formError.password ?\n                        (<span className=\"error-text\">La contraseña debe tener más de 5 caracteres</span>)\n                        :\n                        \"\"\n                    }\n                </Form.Field>\n                <Form.Field>\n                    <Input\n                        type=\"text\"\n                        name=\"userName\"\n                        placeholder=\"Como deberíamos llamarte?\"\n                        icon=\"user circle outline\"\n                        value={formData.userName}\n                        error={formError.userName}\n                    />\n                    {formError.userName ?\n                        (<span className=\"error-text\">Por favor, introduce un nombre de ususario válido</span>)\n                        :\n                        \"\"\n                    }\n                </Form.Field>\n                <Button loading={isLoading} >Continuar</Button>\n            </Form>\n            <div className=\"register-form__options\">\n                <p onClick={() => setSelectedForm(null)}>Volver</p>\n                <p>¿Ya tienes up2volume?{\" \"}\n                    <span onClick={() => setSelectedForm(\"login\")}>Iniciar Sesión</span>\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default RegisterForm;","import React, { useState } from 'react';\nimport { Button, Icon, Form, Input } from 'semantic-ui-react';\nimport { toast } from 'react-toastify';\nimport { isValidateEmail } from \"../../../utils/Validations\";\nimport { loginUserFirebaseApi } from '../../../services/apiConnection';\n\nimport \"./LoginForm.scss\";\n\nconst INITIAL_FORM = {\n    email: '',\n    password: '',\n};\n\nconst LoginForm = ({ setSelectedForm }) => {\n    const [formData, setFormData] = useState(INITIAL_FORM);\n    const [showPassword, setShowPassword] = useState(false);\n    const [formError, setFormError] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n    const [userActive, setUserActive] = useState(true);\n    const [user, setUser] = useState(null);\n\n    //Guarda-Cambia en el estado los valores de los inputs \n    const handlerChange = (event) => {\n        //al cambiar el campo, lo añade con ...spread y sobrescribe el cambiado\n        setFormData({\n            ...formData,\n            [event.target.name]: event.target.value\n        });\n\n    };\n\n    const handlerShowPassword = () => {\n        setShowPassword(!showPassword);\n    };\n\n    const handlerSubmit = (event) => {\n        event.preventDefault();\n        setFormError({});\n        let errors = {};\n        let formOk = true;\n\n        if (!isValidateEmail(formData.email)) {\n            errors.email = true;\n            formOk = false;\n        }\n        if (formData.password.length < 6) {\n            errors.password = true;\n            formOk = false;\n        }\n        //Cambia el estado de los errores para mostralos al usuario\n        setFormError(errors);\n\n        if (formOk) {\n            setIsLoading(true);\n\n            loginUserFirebaseApi(formData.email, formData.password)\n                .then(response => {\n                    //Loguea y desloguea automaticamente si el email no esta verificado\n                    setUser(response.user);\n                    setUserActive(response.user.emailVerified);\n                    //Si evaluo el estado no entra...\n                    if (!response.user.emailVerified) toast.warning(\"Debes verificar la cuenta.\")\n                })\n                .catch(error => handlerErrors(error.code))\n                .finally(() => setIsLoading(false));\n        }\n\n    };\n\n    return (\n        <div className=\"login-form\">\n            <h1>Accede a toda la música gratis</h1>\n            <Form onSubmit={handlerSubmit} onChange={handlerChange} >\n                <Form.Field>\n                    <Input\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Email\"\n                        icon=\"mail outline\"\n                        error={formError.email}\n                    />\n                    {formError.email ?\n                        (<span className=\"error-text\">Por favor, introduce un email válido</span>)\n                        :\n                        \"\"\n                    }\n                </Form.Field>\n                <Form.Field>\n                    <Input\n                        type={showPassword ? \"text\" : \"password\"}\n                        name=\"password\"\n                        placeholder=\"Contraseña\"\n                        icon=\n                        {showPassword ?\n                            (<Icon name=\"eye slash outline\" link onClick={handlerShowPassword} />)\n                            :\n                            (<Icon name=\"eye\" link onClick={handlerShowPassword} />)\n                        }\n                        error={formError.password}\n                    />\n                    {formError.password ?\n                        (<span className=\"error-text\">La contraseña debe tener más de 5 caracteres</span>)\n                        :\n                        \"\"\n                    }\n                </Form.Field>\n                <Button loading={isLoading}>Iniciar sesión</Button>\n            </Form>\n\n            {   //Si el usuario no esta activo, se muestra componente para reenvio de email\n                !userActive ?\n                    <ButtonReSendEmailVerification user={user} setIsLoading={setIsLoading} setUserActive={setUserActive} />\n                    :\n                    \"\"\n            }\n\n            <div className=\"login-form__options\">\n                <p onClick={() => setSelectedForm(null)}>Volver</p>\n                <p>¿No te has registrado?{\" \"}\n                    <span onClick={() => setSelectedForm(\"register\")}>Regístrate</span>\n                </p>\n            </div>\n        </div>\n    )\n}\n\n//Componente que al clicarlo reevia una confirmacion al email\nconst ButtonReSendEmailVerification = ({ user, setIsLoading, setUserActive }) => {\n\n    const reSendVerificationEmail = () => {\n\n        user.sendEmailVerification()\n            .then(() => toast.success(\"Se ha enviado el email de verificación.\"))\n            .catch(error => handlerErrors(error.code))\n            .finally(() => {\n                setIsLoading(false);\n                setUserActive(true);\n            })\n    };\n\n    return (\n        <div className=\"resend-verification-email\">\n            <p>Si no has recibido el email de verificación puedes\n                volver a enviarlo haciendo click <span onClick={reSendVerificationEmail}>aquí.</span>\n            </p>\n        </div>\n    )\n};\n//Manejador del error pasado por parametro, y lanza un toast\nconst handlerErrors = (code) => {\n    switch (code) {\n        case \"auth/wrong-password\":\n            toast.warning(\"El usuario o la contraseña no son correctos.\");\n            break;\n        case \"auth/too-many-requests\":\n            toast.warning(\"Has enviado demasiadas solicitudes de confirmación.\");\n            break;\n        case \"auth/user-not-found\":\n            toast.warning(\"El usuario o la contraseña no son correctos.\");\n            break;\n        default:\n            break;\n    }\n\n};\n\nexport default LoginForm;","export default __webpack_public_path__ + \"static/media/fondo.fb9f4851.png\";","export default __webpack_public_path__ + \"static/media/background-auth.7826ee33.jpg\";","export default __webpack_public_path__ + \"static/media/logo-blanco.a56ddebf.png\";","import React, { useState } from 'react'\nimport AuthOptions from \"../../components/Auth/AuthOptions/AuthOptions\";\nimport RegisterForm from \"../../components/Auth/RegisterForm\";\nimport LoginForm from \"../../components/Auth/LoginForm\";\nimport BackGroundAuth from \"../../assets/jpg/background-auth.jpg\"\nimport BackGroundAuth2 from \"../../assets/png/fondo.png\"\nimport LogoNameWhite from \"../../assets/png/logo-blanco.png\"\n\nimport \"./Auth.scss\";\n\nexport const Auth = () => {\n    const [selectedForm, setSelectedForm] = useState(null);\n\n    const handlerForm = () => {\n        switch (selectedForm) {\n            case \"login\":\n                return <LoginForm setSelectedForm={ setSelectedForm } />;\n            case \"register\":\n                return <RegisterForm setSelectedForm={ setSelectedForm } />;\n            default:\n                return <AuthOptions setSelectedForm={ setSelectedForm } />;\n        }\n    };\n\n    return (\n        <div\n            className=\"auth\"\n            style={{ backgroundImage: `url( ${BackGroundAuth2} )` }} >\n                \n            <div className=\"auth__dark\" />\n            <div className=\"auth__box\" >\n                <div className=\"auth__box-logo\">\n                    <img src={LogoNameWhite} alt=\"up2volume\" />\n                </div>\n                { handlerForm() }\n            </div>      \n        </div>\n    )\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nimport \"./HeaderAlbum.scss\";\n\nexport const HeaderAlbum = ({ album, artist, urlAvatar }) => {\n    const style = {\n        backgroundImage: `url('${urlAvatar}')`\n    }\n\n    return (\n        <div className=\"album__header\">\n            <div className=\"image\"\n                style={style}\n            />\n            <div className=\"info\">\n                <h1>{album.name}</h1>\n                <p>by \n                    <Link to={`/artist/${artist.id}`}>\n                        <span> {artist.name} </span>\n                    </Link>\n                </p>\n            </div>\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { toast } from 'react-toastify';\nimport { Icon, Table } from 'semantic-ui-react';\nimport { getUrlAvatarApi, getArtistDepensItemApi, deleteDataSongApi, deleteFileSongApi, getAlbumDepensIdApi } from \"../../../services/apiConnection\"\nimport \"./ListSongs.scss\";\n\nexport const ListSongs = ({ songs, playerSong, title, userAdmin }) => {\n    useEffect(() => {\n\n    }, [songs])\n    if (songs.length <= 0) return null\n    return (\n        <>\n            <h2>{title}</h2>\n            <Table inverted className=\"list-songs\">\n                <Table.Body>\n                    {\n                        songs.map(song => (<Song key={song.id} song={song} avatar={song.avatar} playerSong={playerSong} userAdmin={userAdmin} />))\n                    }\n                </Table.Body>\n            </Table>\n        </>\n    )\n}\n\nconst Song = ({ song, avatar, playerSong, userAdmin }) => {\n    const [avatarUrl, setAvatarUrl] = useState(null);\n    const [elementInfo, setElementInfo] = useState(null);\n\n    //Recoge la imagen del item\n    const getImage = (url) => {\n\n        const fetchMyAPI = async () => {\n            try {\n                const urlAvatar = await getUrlAvatarApi(url)\n                setAvatarUrl(urlAvatar)\n            } catch (err) { console.log(err); }\n        };\n        fetchMyAPI()\n    }\n\n    //Si no esta asignado a un album -> es un single, trae la info e id de la imagen del artista en vez del album\n    useEffect(() => {\n        if (!song) return\n        if (song.album === '') {\n            const fetchMyAPI = async () => {\n                try {\n                    const artist = await getArtistDepensItemApi(song.artist)\n                    setElementInfo({\n                        ...artist.data(),\n                        id: artist.id\n                    })\n                    getImage(`artists/avatars/${artist.data().avatar}`);\n                } catch {}\n            };\n            fetchMyAPI()\n        } else {\n            const fetchMyAPI = async () => {\n                try {\n                    const album = await getAlbumDepensIdApi(song.album)\n                    setElementInfo({\n                        ...album.data(),\n                        id: album.id\n                    })\n                    getImage(`albums/${album.data().avatar}`);\n                } catch {}\n            };\n            fetchMyAPI()\n        }\n    }, [song])\n\n    const onPlay = (params) => {\n        playerSong(avatarUrl, song.name, song.fileName);\n    };\n    //Elimina de la bbdd el archivo y su info\n    const deleteSong = () => {\n        deleteDataSongApi(song.id)\n            .then(() => {\n                deleteFileSongApi(song.fileName)\n            })\n            .catch(() => toast.warning(\"No se ha podido eliminar el tema.\"))\n    };\n\n    return (\n        <Table.Row  >\n            <Table.Cell collapsing onClick={onPlay}>\n                <Icon name=\"play circle outline\" />\n            </Table.Cell>\n            <Table.Cell onClick={onPlay}>\n                {song.name}\n            </Table.Cell>\n            {userAdmin &&\n                <Table.Cell onClick={deleteSong}>\n                    <Icon className=\"trash alternate outline\" />\n                </Table.Cell>\n            }\n        </Table.Row>\n    )\n};","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'semantic-ui-react';\nimport { HeaderAlbum } from '../../components/Albums/HeaderAlbum/HeaderAlbum';\nimport { ListSongs } from '../../components/Songs/ListSongs/ListSongs';\nimport { getAlbumApi, getSongsDependsAlbumApi, getImageApi, getArtistDepensItemApi } from '../../services/apiConnection';\n\nimport \"./Album.scss\";\n\nconst Album = ({ match, playerSong, userAdmin }) => {\n    const [album, setAlbum] = useState(null);\n    const [urlAvatar, setUrlAvatar] = useState(null)\n    const [artist, setArtist] = useState(null);\n    const [songs, setSongs] = useState([])\n\n    //Trae los temas segun el album pasado\n    useEffect(() => {\n        if (album){\n            getSongsDependsAlbumApi(album.id)\n            .then(songs => {\n                const arraySongs = [];\n                songs?.docs?.map(song => {\n                    arraySongs.push({\n                        ...song.data(),\n                        id: song.id\n                    })\n                })\n                setSongs(arraySongs);\n            })\n        }\n        \n    }, [album])\n\n    //Obtiene el album con el id pasado \n    useEffect(() => {\n        getAlbumApi(match?.params?.id)\n        .then(album => {\n            setAlbum({\n                ...album.data(),\n                id: album.id\n            })\n        })\n        .catch(() => toast.warning(\"No se pudo cargar el álbum.\"));\n    }, [match])\n\n    //Obtiene la imagen del album segun id pasado\n    useEffect(() => {\n        if (!album) return\n        getImageApi(`albums/${album?.avatar}`)\n            .then(url => {\n                setUrlAvatar(url)\n            })\n            .catch(() => toast.warning(\"No se pudo cargar la imagen del álbum.\"))\n    }, [album])\n\n    //Obtiene el artista segun el id pasado, añade al objeto su id\n    useEffect(() => {\n        if (!album) return;\n        getArtistDepensItemApi(album?.artist)\n            .then(artist => {\n                setArtist({\n                    ...artist.data(),\n                    id: album.artist\n                })\n            })\n            .catch(() => toast.warning(\"Error al cargar el nombre del artista.\"))\n    }, [album])\n\n    //Para mostrar mensaje de loading al usuario\n    const isLoading = (!album || !artist)\n    if (isLoading) return <Loader active >Cargando</Loader>\n\n    return (\n        <div className=\"album\">\n            <HeaderAlbum artist={artist} album={album} urlAvatar={urlAvatar} />\n            <div className=\"album__songs\">\n                <ListSongs songs={songs} urlAvatar={urlAvatar} playerSong={playerSong} userAdmin={userAdmin} title=\"Titulo\" />\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Album)","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport { Grid, Loader } from 'semantic-ui-react';\nimport { getAllOfAlbumsApi, getImageApi } from '../../services/apiConnection';\n\nimport \"./Albums.scss\";\n\nexport const Albums = () => {\n    const [albumes, setAlbumes] = useState([]);\n    //Obtiene todos los albumes \n    useEffect(() => {\n        getAllOfAlbumsApi()\n            .then(albums => {\n                const arrayAlbums = [];\n                albums?.docs?.map(album => {\n                    const objectAlbum = album.data();\n                    objectAlbum.id = album.id;\n                    arrayAlbums.push(objectAlbum);\n                })\n                setAlbumes(arrayAlbums);\n            })\n            .catch(() => {\n                toast.warning(\"No se pudieron cargar los Álbumes.\");\n            })\n\n    }, [])\n\n    //Para mostrar mensaje de loading al usuario\n    const isLoading = (!albumes)\n    if (isLoading) return <Loader active >Cargando</Loader>\n\n    return (\n        <div className=\"albums\">\n            <h1>Álbumes</h1>\n            <Grid>\n                {albumes.map(album => (\n                    <Grid.Column key={album.id} mobile={8} tablet={4} computer={3}>\n                        <Album album={album} />\n                    </Grid.Column>\n                ))\n                }\n            </Grid>\n        </div>\n    )\n}\n\nconst Album = ({ album, setImages }) => {\n    const [avatarUrl, setAvatarUrl] = useState(null);\n\n    const style = {\n        backgroundImage: `url('${avatarUrl}')`\n    }\n    //Recoge la imagen del album de la bbdd\n    useEffect(() => {\n        getImageApi(`albums/${album.avatar}`)\n            .then(avatarAlbum => {\n                setAvatarUrl(avatarAlbum);\n            })\n            .catch(() => toast.warning(\"No se pudo cargar la imagen del Álbum.\"))\n    }, [])\n\n\n    return (\n        <Link to={`/album/${album.id}`} >\n            <div className=\"albums__item\">\n                <div className=\"avatar\" style={style} />\n                <h3>{album.name}</h3>\n            </div>\n        </Link>\n    )\n};","import React, { useEffect, useState } from 'react';\nimport { getImageApi } from '../../../services/apiConnection';\n\nimport \"./AvatarArtist.scss\";\n\nexport const AvatarArtist = ({ artist }) => {\n    const [avatarUrl, setAvatarUrl] = useState(null);\n    const style = {\n        backgroundImage: `url('${avatarUrl}')`\n    }\n    useEffect(() => {\n        getImageApi(`artists/avatars/${artist?.avatar}`)\n            .then(url => {\n                setAvatarUrl(url)\n            });\n    }, [artist])\n\n    return (\n        <div className=\"avatar-artist\" style={style}></div>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Image } from 'semantic-ui-react';\nimport { AvatarArtist } from \"../AvatarArtist/AvatarArtist\"\nimport { getImageApi } from \"../../../services/apiConnection\"\n\nimport \"./BannerArtist.scss\";\n\nexport const BannerArtist = ({ artist }) => {\n    const [bannerUrl, setBannerUrl] = useState(null);\n    const style = {\n        backgroundImage: `url('${bannerUrl}')`\n    }\n    //Saca la imagen de banner del artista con el id pasado\n    useEffect(() => {\n        getImageApi(`artists/banners/${artist?.banner}`)\n            .then(url => {\n                setBannerUrl(url)\n            })\n    }, [artist])\n\n    return (\n        <div className=\"banner-artist\" style={style}>\n            <div className=\"banner-artist__gradient\" />\n            <div className=\"banner-artist__info\">\n                <h4>Artista</h4>\n                <h1>{artist.name}</h1>\n            </div>\n        </div>\n    )\n}","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"semantic-ui-react\";\nimport { getUrlAvatarApi } from \"../../../../services/apiConnection\";\n\nimport \"./RenderItemArtist.scss\"\n\nexport const RenderItemArtist = ({ item, folderImage, urlName }) => {\n    const [avatar, setAvatar] = useState(null);\n    \n    const style = {\n        backgroundImage: `url(${avatar})`,\n    }\n    //Recoge la imagen del item\n    useEffect(() => {\n        const fetchMyAPI = async () => {\n            try {\n                const urlAvatar = await getUrlAvatarApi(`${folderImage}/${item.avatar}`)\n                setAvatar(urlAvatar)\n            } catch {}\n        }; \n        fetchMyAPI()\n    }, [item, folderImage])\n\n    return (\n\n        <Link to={`/${urlName}/${item.id}`} >\n            <div className=\"object__card\">\n                <Card  className=\"basic-slider-items__list-artist\"\n                image={avatar}/>\n                <h4>{item.name}</h4>\n            </div>\n        </Link>      \n    )\n};","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card } from \"semantic-ui-react\";\n\nimport \"./RenderItem.scss\"\nimport { getUrlAvatarApi } from \"../../../../services/apiConnection\";\n\nexport const RenderItem = ({ item, folderImage, urlName }) => {\n    const [avatar, setAvatar] = useState(null);\n    \n    const style = {\n        backgroundImage: `url(${avatar})`,\n    }\n\n    //Recoge la imagen del item\n    useEffect(() => {\n        const fetchMyAPI = async () => {\n            try {\n                const urlAvatar = await getUrlAvatarApi(`${folderImage}/${item.avatar}`)\n                setAvatar(urlAvatar)\n            } catch {}\n        }; \n        fetchMyAPI()\n    }, [item, folderImage])\n\n    return (\n        <Link to={`/${urlName}/${item.id}`} >\n            <div className=\"object__card\">\n                <Card  className=\"basic-slider-items__list-item\"\n                image={avatar}/>\n                <h4>{item.name}</h4>\n            </div>\n        </Link>\n    )\n};","import React, { useEffect, useState } from 'react';\nimport Slider from \"react-slick\";\nimport { RenderItemArtist } from '../RenderItems/RenderItemArtist/RenderItemArtist';\nimport { RenderItem } from '../RenderItems/RenderItem/RenderItem';\n\nimport \"./BasicSliderItems.scss\";\n\n\n//Componente Slider que muestra albums. artistas, canciones...\nexport const BasicSliderItems = ({ title, data, folderImage, urlName}) => {\n    //ajustes del slider -> react slick\n    const settings = {\n        className: \"basic-slider-items__list\",\n        infinite: true,\n        centerPadding: \"60px\",\n        slidesToShow: 4,\n        swipeToSlide: true,\n        responsive: [\n          {\n            breakpoint: 1024,\n            settings: {\n              slidesToShow: 3,\n              slidesToScroll: 3,\n              infinite: true,\n            }\n          },\n          {\n            breakpoint: 600,\n            settings: {\n              slidesToShow: 2,\n              slidesToScroll: 2,\n              initialSlide: 2\n            }\n          },\n          {\n            breakpoint: 480,\n            settings: {\n              slidesToShow: 1,\n              slidesToScroll: 1\n            }\n          }\n        ]\n    }\n    //Si el array no tiene suficientes elementos no se muestra\n    if(data.length < 4) return null; \n\n    return (\n        <div className=\"basic-slider-items\">\n        <h2>{title}</h2>\n        <Slider {...settings}>\n          { data.map( object => \n            urlName===\"artist\"?\n            // renderiza distinto para imagen circular\n            (<RenderItemArtist key={object.id} item={object} folderImage={folderImage} urlName={urlName} />)\n            :\n            (<RenderItem key={object.id} item={object} folderImage={folderImage} urlName={urlName} />)\n          )}\n        </Slider>\n      </div>\n    )\n}","import React, { useEffect, useState } from 'react'\nimport Slider from \"react-slick\";\nimport { Card, Icon } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { getUrlAvatarApi, getAlbumDepensIdApi, getArtistDepensItemApi } from '../../../services/apiConnection';\n\nimport \"./SongsSlider.scss\";\n\nexport const SongsSlider = ({ title, data, playerSong }) => {\n    const [stateData, setstateData] = useState(data)\n    \n    //ajustes del slider -> semantic-ui\n    const settings = {\n        className: \"songs-slider__list\",\n        infinite: true,\n        centerPadding: \"60px\",\n        slidesToShow: 5,\n        swipeToSlide: true,\n        responsive: [\n            {\n                breakpoint: 1024,\n                settings: {\n                    slidesToShow: 3,\n                    slidesToScroll: 3,\n                    infinite: true,\n                }\n            },\n            {\n                breakpoint: 600,\n                settings: {\n                    slidesToShow: 2,\n                    slidesToScroll: 2,\n                    initialSlide: 2\n                }\n            },\n            {\n                breakpoint: 480,\n                settings: {\n                    slidesToShow: 1,\n                    slidesToScroll: 1\n                }\n            }\n        ]\n    }\n    \n    if (data.length < 5) return null;\n\n    return (\n        <div className=\"songs-slider\">\n            <h2>{title}</h2>\n            <Slider {...settings}>\n                {data.map(song => (\n                    <Song key={song.id} item={song} playerSong={playerSong}/>\n                ))}\n            </Slider>\n        </div>\n    )\n}\n\nconst Song = ({ item, playerSong }) => {\n    const [avatar, setAvatar] = useState(null);\n    const [elementInfo, setElementInfo] = useState(null);\n\n    //Trae la imagen correspondiente\n    const getImage = (url) => {\n        const fetchMyAPI = async () => {\n            try {\n                const urlAvatar = await getUrlAvatarApi(url)\n                setAvatar(urlAvatar)\n            } catch {}\n        }; \n        fetchMyAPI()\n    };\n\n    //Si no esta asignado a un album -> es un single, trae la info e id de la imagen del artista en vez del album\n    useEffect(() => {\n        if (!item) return\n        if (item.album === '') {\n            const fetchMyAPI = async () => {\n                try {\n                    const artist = await getArtistDepensItemApi(item.artist)\n                    setElementInfo({\n                        ...artist.data(),\n                        id: artist.id\n                    })\n                    getImage(`artists/avatars/${artist.data().avatar}`);\n                } catch {}\n            };\n            fetchMyAPI()\n        } else {\n            const fetchMyAPI = async () => {\n                try {\n                    const album = await getAlbumDepensIdApi(item.album)\n                    setElementInfo({\n                        ...album.data(),\n                        id: album.id\n                    })\n                    getImage(`albums/${album.data().avatar}`);\n                } catch {}\n            };\n            fetchMyAPI()\n        }\n    }, [item])\n\n    //Ejecuta el tema\n    const onPlay = () => {\n        playerSong(avatar, item.name, item.fileName);\n    };\n\n    return (\n        <div className=\"songs-slider__list-song\">\n            <div className=\"avatar\" >\n                {!item.album ?\n                <div className=\"object__card\">\n                    <Card className=\"basic-slider-items__list-item\"\n                        image={avatar} />\n                    <Icon name=\"play circle\" onClick={onPlay}/>\n                    <Link to={`/artist/${elementInfo?.id}`} >\n                        <h4>{item.name}</h4>\n                    </Link>\n                </div>\n                :\n                <div className=\"object__card\">\n                    <Card className=\"basic-slider-items__list-item\"\n                        image={avatar}\n                        />\n                    <Icon name=\"play circle\" onClick={onPlay} />\n                    <Link to={`/album/${elementInfo?.id}`} >\n                        <h4>{item.name}</h4>\n                    </Link>\n                </div>\n            }\n            </div>\n        </div>\n    )\n};","import firebaseApp from \"./Firebase\";\nimport firebase from \"firebase\";\n\nconst bbdd = firebase.firestore(firebaseApp);\n\nexport const isUserAdmin = async (uid) => {\n    const response = await bbdd.collection(\"admins\").doc(uid).get();\n\n    return response.exists;\n};\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router';\nimport { BannerArtist } from '../../components/Artists/BannerArtist/BannerArtist';\nimport { AvatarArtist } from '../../components/Artists/AvatarArtist/AvatarArtist';\nimport { BasicSliderItems } from '../../components/Sliders/BasicSliderItems/BasicSliderItems';\nimport { toast } from 'react-toastify';\nimport { SongsSlider } from '../../components/Sliders/SongsSlider/SongsSlider';\nimport { ListSongs } from '../../components/Songs/ListSongs/ListSongs';\nimport { getAlbumsOfArtistApi, getAllSongsForAlbumApi, getArtistDepensItemApi, getSinglesOfArtistApi } from '../../services/apiConnection';\nimport { isUserAdmin } from '../../utils/Api';\n\nimport \"./Artist.scss\";\n\n// match es un parametro de los props que llegan gracias a withRouter\nconst Artist = ({ match, playerSong, userAdmin }) => {\n\n    const [artist, setArtist] = useState();\n    const [albums, setAlbums] = useState([]);\n    const [songs, setSongs] = useState([]);\n    const [singles, setSingles] = useState([]);\n    const [allSongs, setAllSongs] = useState([]);\n\n    //Saca el artista con el id pasado \n    useEffect(() => {\n        getArtistDepensItemApi(match?.params?.id)\n            .then(response => {\n                setArtist({\n                    ...response.data(),\n                    id: response.id\n                })\n            });\n    }, [match])//match?.params?.id    \n\n    //Obtiene los albumes del artista y los guarda en el estado Albums\n    useEffect(() => {\n        if (!artist) return;\n        getAlbumsOfArtistApi(artist.id)\n            .then(albums => {\n                const arrayAlbums = [];\n                albums?.docs?.map(album => arrayAlbums.push({\n                    ...album.data(),\n                    id: album.id\n                }));\n                setAlbums(arrayAlbums);\n            })\n            .catch(() => toast.warning(\"No se pudieron cargar los álbumes del artista.\"))\n    }, [artist])\n\n    //carga en el estado todas las canciones por album\n    useEffect(() => {\n        const arraySongs = [];\n        albums.map(async album => {\n            getAllSongsForAlbumApi(album.id)//Obtiene los los temas segun el album\n                .then(response => {\n                    response?.docs.map(song => {\n                        arraySongs.push({\n                            ...song.data(),\n                            id: song.id\n                        })\n                    });\n                    setSongs(arraySongs);\n                })\n        })\n    }, [albums])\n\n    //carga ene el stado todos los singles del artista\n    useEffect(() => {\n        if (!artist) return null;\n        getSinglesOfArtistApi(artist.id)//Obtiene los singles del artista\n            .then(response => {\n                const arraySingles = [];\n                response?.docs.map(song => {\n                    arraySingles.push({\n                        ...song.data(),\n                        id: song.id\n                    })\n                })\n                setSingles(arraySingles);\n            })\n    }, [songs])\n    \n    useEffect(() => {\n        if (!songs || !singles) return null\n        setAllSongs([...songs, ...singles]);\n    }, [songs, singles])\n\n    return (\n        <div className=\"artist\">\n            {artist && <BannerArtist artist={artist} />}\n            {artist && <AvatarArtist artist={artist} />}\n            {/* {userAdmin && \"Borrar Artista\" } */}\n            <div className=\"artist__content\">    \n                <div className=\"album__songs\">\n                    <ListSongs songs={singles} playerSong={playerSong} title=\"Singles\" userAdmin={userAdmin}/>\n                </div>\n                <BasicSliderItems\n                    title=\"Álbumes\"\n                    data={albums}\n                    folderImage=\"albums\"\n                    urlName=\"album\"\n                />\n                <SongsSlider\n                    title=\"Temas\"\n                    data={allSongs}\n                    playerSong={playerSong}\n                />\n            </div>\n\n        </div>\n    )\n}\n\nexport default withRouter(Artist);","import React, { useEffect, useState } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { getAllOfArtistApi, getImageApi } from '../../services/apiConnection';\nimport { toast } from 'react-toastify';\n\nimport \"./Artists.scss\";\n\nexport const Artists = () => {\n    const [artists, setArtists] = useState([]);\n    \n    //Obtiene todos los artistas de la bbdd\n    useEffect(() => {\n        getAllOfArtistApi()\n            .then( response => {\n                const arrayArtists = [];\n                response?.docs?.map(artist => {\n                    const data = artist.data();\n                    data.id = artist.id;\n                    arrayArtists.push(data);\n                });\n                setArtists(arrayArtists);\n            })\n            .catch(() => toast.warning(\"No se pudieron cargar los Artistas.\"))            \n    }, [])\n\n    return (\n        <div className=\"artists\">\n            <h1>Artistas</h1>\n            <Grid>\n                {artists.map(artist => (\n                    <Grid.Column key={artist.id} mobile={8} tablet={4} computer={3}>\n                        <Artist  artist={artist} />\n                    </Grid.Column>\n                     ))\n                }\n            </Grid>\n        </div>\n    )\n}\n\nconst Artist = ({ artist }) => {\n    const [avatarUrl, setAvatarUrl] = useState(null);\n    //Obtiene la imagen del artista\n    useEffect(() => {\n        getImageApi(`artists/avatars/${artist.avatar}`)\n            .then(url => {\n                setAvatarUrl(url)\n            })\n    }, [artist])\n\n    const style = { backgroundImage: `url('${avatarUrl}')` }\n    \n    return (\n        <Link to={`/artist/${artist.id}`} >\n            <div className=\"artists__item\">\n                <div className=\"avatar\" style={style} />\n                <h3>{artist.name}</h3>\n            </div>\n        </Link>\n    )\n};","import { toast } from \"react-toastify\";\n\nconst alertErrors = (typeOfError = 'default') => {\n    switch (typeOfError) {\n        case \"auth/wrong-password\":\n            toast.warning(\"La contraseña no es correcta.\")\n            break;\n        case \"auth/email-already-in-use\":\n            toast.warning(\"El email ya está en uso.\")\n            break;\n        case \"storage/object-not-found\":\n            toast.warning(\"Algún elemento no se pudo cargar.\");\n            break;  \n        default:\n            toast.warning(\"Ups... Algo salió mal.\")\n            break;\n    }\n};\n\nexport default alertErrors;","import React, { useEffect, useState } from 'react'\nimport { Image } from 'semantic-ui-react';\nimport alertErrors from '../../utils/AlertError';\nimport { downloadBannersApi } from '../../services/apiConnection';\nimport Slider from 'react-slick';\nimport \"./BannerHome.scss\";\n\nexport const BannerHome = () => {\n    const [bannerUrls, setBannerUrls] = useState([]);\n    const settings = {\n        infinite: true,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        autoplay: true,\n        speed: 1000,\n        autoplaySpeed: 5000,\n        cssEase: \"linear\",\n      };\n\n    //Recupera los banners principales\n    useEffect(() => {\n        const getUrl = async () => {\n            try {\n                const banner1 = await downloadBannersApi('banner1.png');\n                const banner2 = await downloadBannersApi('banner2.png');\n                const banner3 = await downloadBannersApi('banner3.png');\n                const banner4 = await downloadBannersApi('banner4.png');\n                const banner5 = await downloadBannersApi('banner5.png');\n                setBannerUrls([banner5, banner2, banner3, banner4, banner1]); \n            } catch (error) {\n                alertErrors(error.code);\n            }\n        };\n        getUrl();\n    }, []);\n\n    if (!bannerUrls) return null;\n    return (\n        <div className=\"banner-home\">\n            <Slider {...settings}  >\n                {\n                    bannerUrls.map(url => <Image key={url} src={url} className=\"sliderClass\"/>)\n                }\n            </Slider>\n        </div>\n        \n    )\n}\n","import React, { useEffect, useState } from \"react\";\nimport { BannerHome } from \"../../components/BannerHome/BannerHome\";\nimport { BasicSliderItems } from \"../../components/Sliders/BasicSliderItems/BasicSliderItems\";\nimport { SongsSlider } from \"../../components/Sliders/SongsSlider/SongsSlider\";\nimport { getLast10Albums, getLast10Songs, getLast10Artists } from \"../../services/apiConnection\";\n\nimport \"./Home.scss\";\n\nexport const Home = ({ playerSong }) => {\n    const [artists, setArtists] = useState([]);\n    const [albums, setAlbums] = useState([]);\n    const [songs, setSongs] = useState([]);\n\n    //obtiene las ultimas 10 canciones añadidas\n    useEffect(() => {\n        getLast10Songs()\n            .then(songs => {\n                const arraySongs = [];\n                songs?.docs?.map(song => {\n                    arraySongs.push({\n                        ...song.data(),\n                        id: song.id\n                    })\n                })\n                setSongs(arraySongs);\n            })\n    }, [])\n\n    //obtiene los 10 ultimos albumes\n    useEffect(() => {\n        getLast10Albums()\n            .then(albums => {\n                const arrayAlbums = [];\n                albums?.docs?.map(album => {\n                    const data = album.data();\n                    data.id = album.id;\n                    arrayAlbums.push(data);\n                })\n                setAlbums(arrayAlbums);\n            })\n    }, [])\n\n    //Obtiene los ultimos 10 artistas\n    useEffect(() => {\n        getLast10Artists()\n            .then(response => {\n                const arrayArtists = [];\n                response?.docs?.map(artist => {\n                    const data = artist.data();\n                    data.id = artist.id;\n                    arrayArtists.push(data);\n                })\n                setArtists(arrayArtists);\n            })\n    }, [])\n\n    return (\n        <>\n            <BannerHome />\n            <div className=\"home\">\n                <BasicSliderItems\n                    title=\"Últimos artistas\"\n                    data={artists}\n                    folderImage=\"artists/avatars\"\n                    urlName=\"artist\"\n                />\n                <BasicSliderItems\n                    title=\"Últimos álbumes\"\n                    data={albums}\n                    folderImage=\"albums\"\n                    urlName=\"album\" />\n                <SongsSlider\n                    title=\"Últimas temas añadidos\"\n                    data={songs}\n                    playerSong={playerSong}\n                />\n            </div>\n        </>\n    );\n};","export default __webpack_public_path__ + \"static/media/user.8b06a583.png\";","import React, { useState, useCallback } from \"react\";\nimport { Image } from \"semantic-ui-react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { toast } from \"react-toastify\";\nimport AvatarDefault from \"../../assets/png/user.png\";\nimport { getUrlAvatarApi, uploadImageApi, updateUserAvatarApi } from \"../../services/apiConnection\";\n\nexport const UploadAvatar = ({ user, setReloadApp }) => {\n  const [avatarUrl, setAvatarUrl] = useState(user.photoUrl);\n\n  //No permite subir imagenes de mas de 300kb\n  const onDrop = useCallback((acceptedFiles) => {\n    \n    const file = acceptedFiles[0]; \n    if (!file) return toast.warning(\"El avatar no tiene un formato permitido ( jpg / png )\");\n    const isGoodSize = (300000 > file.size)\n    \n    if (isGoodSize) {\n        //TODO averiguar porque no crea el objeto\n        const url = URL.createObjectURL(file)\n        setAvatarUrl(url);\n        //Sube la imagen a firebase con el uid del usuario a la carpeta/tabla de imagenes\n        uploadImageApi(user.uid, file)\n          .then(() => updateUserAvatar());\n    }\n    if (!isGoodSize) toast.warning(\"El avatar no puede exceder de 300kb\");\n\n  });\n\n  //destructuring de los dos metodos que necesito y establece config aceptada\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    accept: \"image/jpeg, image/png\",\n    noKeyboard: true,\n    onDrop,\n  });\n    \n  //Actualiza la imagen del usuario en la bbdd de usuarios\n  const updateUserAvatar = () => {\n    const fetchMyAPI = async () => {\n      try {\n        const urlAvatar = await getUrlAvatarApi(`avatar/${user.uid}`)\n        await updateUserAvatarApi(urlAvatar)//llamada a bbdd (coleccion de usuarios) y actualiza la img\n        setReloadApp( prevState => !prevState); // Hace recargar todos los componentes\n      } catch {\n        toast.error(\"Error al actualizar el avatar\")\n      }\n\n    };\n    fetchMyAPI()\n  };\n\n  return (\n    <div className=\"user-avatar\" {...getRootProps()}>\n      <input {...getInputProps()} />\n      {isDragActive ? (\n        <Image src={AvatarDefault} />\n      ) : ( \n        <Image src={user.photoURL ? user.photoURL : AvatarDefault} />\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport { updateNameUser } from '../../services/apiConnection';\n\nexport const UserName = ({ user, setShowModal, setTitleModal, setContentModal, setReloadApp }) => {\n\n    const onEdit = () => {\n        setContentModal(<ChangeDisplayNameForm displayName={user.displayName} setShowModal={setShowModal} setReloadApp={setReloadApp} />)\n        setTitleModal(\"Actualizar nombre\")\n        setShowModal(true)\n    };\n\n    return (\n        <div className=\"user-name\">\n            <h2>{user.displayName}</h2>\n            <Button circular onClick={onEdit}>\n                Actualizar\n            </Button>\n        </div>\n    )\n}\n\nconst ChangeDisplayNameForm = ({ displayName, setShowModal, setReloadApp }) => {\n    const [name, setName] = useState(displayName);\n    const [isLoading, setIsLoading] = useState(false)\n\n    const handlerSubmit = () => {\n\n        const notChange = (displayName === name || !name);\n        if (!notChange) {\n            setIsLoading(true)\n            updateNameUser(name)\n                .then(() => {\n                    setReloadApp(prevState => !prevState)\n                    toast.success(\"El nombre se cambió correctamente.\")\n                    setIsLoading(false);\n                    setShowModal(false);\n                })\n                .catch(() => {\n                    toast.error(\"No se pudo cambiar el nombre.\")\n                    setIsLoading(false);\n                    setShowModal(false);\n                })\n        } else\n            setShowModal(false)\n\n    };\n\n    return (\n        <Form onSubmit={handlerSubmit} >\n            <Form.Field>\n                <Input defaultValue={displayName} name=\"userName\" onChange={e => setName(e.target.value)} />\n            </Form.Field>\n            <Button loading={isLoading}>Actualizar</Button>\n        </Form>\n    )\n};","import React from 'react'\nimport { Icon, Modal } from 'semantic-ui-react';\n\nimport \"./BasicModal.scss\";\n\nexport const BasicModal = ({ show, setShow, title, children }) => {\n    \n    const onClose = () => {\n        setShow( false );\n    };\n    \n    return (\n        <Modal open={show} onClose={onClose} className=\"basic-modal\" size=\"tiny\">\n            <Modal.Header>\n                <h3>{title}</h3>\n                <Icon name=\"close\" onClick={onClose} />\n            </Modal.Header>\n            <Modal.Content>\n                {children}\n            </Modal.Content>\n        </Modal>\n    )\n}\n","import React, { useState } from 'react'\nimport { toast } from 'react-toastify';\nimport { Button, Form, Icon, Input } from 'semantic-ui-react'\nimport alertErrors from '../../utils/AlertError';\nimport { logOutApi, reAuthenticateApi, sendEmailVerificationApi, updateEmailApi } from '../../services/apiConnection';\n\nexport const UserEmail = ({ user, setShowModal, setTitleModal, setContentModal }) => {\n\n    const onEdit = () => {\n        // setReloadApp={setReloadApp}\n        setContentModal(<ChangeEmailForm email={user.email} setShowModal={setShowModal} />);\n        setTitleModal(\"Actualizar email\");\n        setShowModal(true);\n    };\n\n    return (\n        <div className=\"user-email\">\n            <h3>Email: {user.email}</h3>\n            <Button circular onClick={onEdit} >Actualizar</Button>\n        </div>\n\n    )\n}\n\nconst ChangeEmailForm = ({ email, setShowModal }) => {\n    const [isVisible, setIsVisible] = useState(false)\n    const [formData, setFormData] = useState({ email: email, password: '' })\n    const [isLoading, setIsLoading] = useState(false)\n\n    const handlerSubmit = (event) => {\n        event.preventDefault();\n        const isValidEmail = (formData.email !== email && formData.email !== '')\n        const isEqual = formData.email === email\n\n        if (!isValidEmail) {\n            isEqual ?\n                toast.warning(\"El email no puede ser el mismo.\")\n                :\n                toast.warning(\"El email no se puede dejar vacío\")\n        }\n        if (isValidEmail) {\n            setIsLoading(true);\n            //Asegura los credenciales mediante password\n            reAuthenticateApi(formData.password)\n                .then(() => {\n                    const fetchMyAPI = async() => {\n                        try {\n                            await updateEmailApi(formData.email)//Se actualiza el email\n                            toast.success(\"Email actualizado.\")\n                            setIsLoading(false)\n                            setShowModal(false)\n                            //se envia verificacion por email\n                            await sendEmailVerificationApi()\n                            await logOutApi()\n                        } catch (error) {\n                            alertErrors(error.code)\n                            setIsLoading(false)\n                        }\n                    };\n                    fetchMyAPI()\n                })\n                .catch(error => {\n                    alertErrors(error?.code) \n                })\n        }\n        setIsLoading(false)\n    };\n\n    const handlerChange = (event) => {\n        setFormData({\n            ...formData,\n            [event.target.name]: event.target.value\n        })\n    };\n\n    const handlerVisiblePass = () => {\n        setIsVisible(prevState => !prevState)\n    };\n\n    return (\n        <Form onSubmit={handlerSubmit}>\n            <Form.Field>\n                <Input\n                    name=\"email\"\n                    defaultValue={email}\n                    type=\"text\"\n                    onChange={handlerChange}\n                />\n            </Form.Field>\n            <Form.Field>\n                <Input\n                    name=\"password\"\n                    placeholder=\"Contraseña\"\n                    onChange={handlerChange}\n                    type={isVisible ? \"text\" : \"password\"}\n                    icon={\n                        <Icon name={isVisible ? \"eye slash outline\" : \"eye\"}\n                            link\n                            onClick={handlerVisiblePass}\n                        />\n                    }\n                />\n            </Form.Field>\n            <Button loading={isLoading}>Actualizar</Button>\n        </Form>\n    )\n};","import React, { useState } from 'react'\nimport { toast } from 'react-toastify';\nimport { Button, Form, Icon, Input } from 'semantic-ui-react';\nimport alertErrors from '../../utils/AlertError';\nimport { logOutApi, reAuthenticateApi, updatePasswordApi } from '../../services/apiConnection';\n\nexport const UserPassword = ({ setShowModal, setTitleModal, setContentModal }) => {\n    const handlerSumbit = () => {\n        setTitleModal(\"Actualiza tu contraseña\");\n        setContentModal(<ChangePasswordForm setShowModal={setShowModal} />);\n        setShowModal(true);\n    };\n\n    return (\n        <div className=\"user-password\">\n            <h3>Contraseña: xxxxxx</h3>\n            <Button circular onClick={handlerSumbit}>Actualizar</Button>\n        </div>\n    )\n}\n\nconst ChangePasswordForm = ({ setShowModal }) => {\n    const [showPassword, setShowPassword] = useState(false);\n    const [formData, setFormData] = useState({});\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handlerShowPass = () => {\n        setShowPassword(prevState => !prevState);\n    };\n    const handlerChange = (event) => {\n        setFormData({\n            ...formData,\n            [event.target.name]: event.target.value\n        })\n    };\n    const checkPasswords = (currentPassword, newPass1, newPass2) => {\n        const notValidPassword = (!currentPassword || !newPass1 || !newPass2);\n        if (notValidPassword) {\n           toast.warning(\"Has dejado algún campo vacío.\");\n           return false; \n        }\n\n        const isEqualToAllPassword = currentPassword === newPass1;\n        if (isEqualToAllPassword) {\n            toast.warning(\"La nueva contraseña no puede ser la misma que la actual.\");\n            return false;\n        }\n\n        const notAreEqualsNewsPassword = newPass1 !== newPass2;\n        if (notAreEqualsNewsPassword) {\n            toast.warning(\"La nuevas contraseñas deben ser iguales.\");\n            return false\n        } \n\n        const isCorrectSize = newPass1.length > 6;\n        if (!isCorrectSize) {\n            toast.warning(\"La nueva contraseña debe tener mas de 6 caractéres.\");\n            return false;\n        }\n        \n        return true\n    };\n\n    const handlerSubmit = (event) => {\n        event.preventDefault();\n        const currentPassword = formData.currentPassword.trim();\n        const newPass1 = formData.newPass1.trim();\n        const newPass2 = formData.newPass2.trim();\n        const isOkPass = checkPasswords(currentPassword, newPass1, newPass2);\n        //Pasa todas las validaciones\n        if (isOkPass) {\n            setIsLoading(true);\n            //Se reautentica el usuario\n            reAuthenticateApi(currentPassword)\n                .then( () => {//CAmbio de password\n                    updatePasswordApi(newPass1)\n                        .then(() => {\n                            toast.success(\"La contraseña se cambió correctamente.\");\n                            logOutApi()//Se desloguea al usuario\n                        })\n                        .catch(error => alertErrors(error.code));\n\n                    setShowModal(false);\n                })\n                .catch( error => {\n                    alertErrors(error.code);\n                }) \n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <Form onSubmit={handlerSubmit} onChange={handlerChange} >\n            <Form.Field>\n                <Input\n                    name=\"currentPassword\"\n                    placeholder=\"Contraseña actual\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    icon={<Icon name=\"eye\" link onClick={handlerShowPass} />} />\n            </Form.Field>\n            <Form.Field>\n                <Input\n                    name=\"newPass1\"\n                    placeholder=\"Nueva contraseña\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    icon={<Icon name=\"eye\" link onClick={handlerShowPass} />} />\n            </Form.Field>\n            <Form.Field>\n                <Input\n                    name=\"newPass2\"\n                    placeholder=\"Repite la nueva contraseña\"\n                    type={showPassword ? \"text\" : \"password\"}\n                    icon={<Icon name=\"eye\" link onClick={handlerShowPass} />} />\n            </Form.Field>\n            <Button loading={isLoading}>Actualizar</Button>\n        </Form>\n    )\n};","import React, { useState } from 'react';\nimport { UploadAvatar } from '../../components/Settings/UploadAvatar';\nimport { UserName } from '../../components/Settings/UserName';\nimport { BasicModal } from '../../components/Modal/BasicModal/BasicModal';\nimport { UserEmail } from '../../components/Settings/UserEmail';\nimport { UserPassword } from '../../components/Settings/UserPassword';\nimport \"./Settings.scss\";\n\n\n\nexport const Settings = ({ user, setReloadApp }) => {\n    const [showModal, setShowModal] = useState(false);\n    const [titleModal, setTitleModal] = useState('');\n    const [contentModal, setContentModal] = useState(null)\n\n    return (\n        <div className=\"settings\">\n            <h1>Configuración</h1>\n            <div className=\"avatar-name\">\n                <UploadAvatar user={user} setReloadApp={setReloadApp} />\n                <UserName user={user} \n                    setShowModal={setShowModal} \n                    setTitleModal={setTitleModal} \n                    setContentModal={setContentModal} \n                    setReloadApp={setReloadApp} />       \n            </div>\n            <UserEmail \n                user={user} \n                setShowModal={setShowModal} \n                setTitleModal={setTitleModal} \n                setContentModal={setContentModal}/> \n\n            <UserPassword \n                setShowModal={setShowModal} \n                setTitleModal={setTitleModal} \n                setContentModal={setContentModal} />\n\n            <BasicModal show={showModal} setShow={setShowModal} title={titleModal} children={contentModal} />\n\n            \n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Route, Switch } from 'react-router'\nimport Album from '../pages/Album/Album'\nimport { Albums } from '../pages/Albums/Albums'\nimport Artist from '../pages/Artist/Artist'\nimport { Artists } from '../pages/Artists/Artists'\nimport { Home } from '../pages/Home/Home'\nimport { Settings } from '../pages/Settings/Settings'\nimport { isUserAdmin } from '../utils/Api'\n\nexport const Routes = ({ user, setReloadApp, playerSong }) => {\n    const [userAdmin, setUserAdmin] = useState(false)\n    //Verifica si es administrador\n    useEffect(() => {\n        isUserAdmin(user.uid)\n            .then(response => setUserAdmin(response))\n    }, [user]);\n    return (\n        <Switch> \n            <Route path=\"/artists\" exact >\n                <Artists />\n            </Route>\n            <Route path=\"/albums\" exact >\n                <Albums />\n            </Route>\n            <Route path=\"/settings\" exact >\n                <Settings user={user} setReloadApp={setReloadApp}/>\n            </Route>\n            <Route path=\"/album/:id\" exact >\n                <Album playerSong={playerSong} userAdmin={userAdmin} />\n            </Route>\n            <Route path=\"/artist/:id\" exact >\n                <Artist playerSong={playerSong} userAdmin={userAdmin} />\n            </Route>\n            <Route path=\"/\" >\n                <Home playerSong={playerSong} />\n            </Route>\n        </Switch>\n    )\n}\n","export default __webpack_public_path__ + \"static/media/no-image.cd703f9f.png\";","import { set, uniqueId } from 'lodash-es';\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { useDropzone } from 'react-dropzone';\nimport { toast } from 'react-toastify';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Button, Dropdown, Form, Image, Input } from 'semantic-ui-react';\nimport { getAllOfArtistApi, uploadAlbumApi, uploadGenericImageApi } from '../../../services/apiConnection';\n\nimport NoImage from \"../../../assets/png/no-image.png\";\nimport \"./AddAlbumForm.scss\";\n\nconst FORM_INITIAL_VALUE = {\n    name: '',\n    artist: ''\n}\n\nexport const AddAlbumForm = ({ setShowModal }) => {\n    const [imgAlbum, setImgAlbum] = useState(null);\n    const [artists, setArtists] = useState([]);\n    const [formData, setFormData] = useState(FORM_INITIAL_VALUE);\n    const [isLoading, setIsLoading] = useState(false);\n    const [file, setFile] = useState(null);\n\n    const style = {\n        backgroundImage: `url('${imgAlbum}')`\n    }\n    //Trae todos los artistas para mostrarlos en el desplegable\n    useEffect(() => {\n        const fetchMyAPI = async () => {\n            try {\n                const artists = await getAllOfArtistApi()\n                const arrayArtists = [];\n                artists?.docs?.map(artist => {\n                    const data = artist.data();\n                    //Se crea el modelo\n                    const artistMod = {\n                        key: artist.id,\n                        value: artist.id,\n                        text: data.name\n                    }\n                    arrayArtists.push(artistMod);\n                });\n                setArtists(arrayArtists);\n            } catch (error) {\n                toast.warning(\"Ups... Algo salió mal.\")\n            }\n        };\n        fetchMyAPI()\n    }, [])\n    \n    const onDrop = useCallback(acceptedFile => {\n        const fileUploated = acceptedFile[0];\n\n        if (!fileUploated) return toast.warning(\"La imagen del album no tiene un formato correcto\")\n        //VAlida que la imagen exceda de 1 Mb\n        const isGoodSize = (1000000 > fileUploated.size)\n        if (!isGoodSize) return toast.warning(\"La imagen no puede exceder de 1Mb\");\n        \n        setFile(fileUploated);\n        setImgAlbum(URL.createObjectURL(fileUploated));\n    })\n\n    const { getRootProps, getInputProps } = useDropzone({\n        accept: \"image/jpeg, image/png\",\n        noKeyboard: true,\n        onDrop\n    })\n\n    const handlerChange = (event, data) => {\n        //data solo viene con el dropdown\n        data? setFormData({\n            ...formData,\n            'artist': data.value\n        }) \n        :\n        setFormData({\n            ...formData,\n            [event.target.name]: event.target.value.trim()\n        })\n        \n    };\n\n    const handlerSubmit = async (event) => {\n        event.preventDefault();\n        //Validacion de campos\n        if (!formData.name) return toast.warning(\"Debes añadir el nombre del album.\");\n        if (!formData.artist) return toast.warning(\"Debes seleccionar un artista.\");\n        if (!imgAlbum) return toast.warning(\"Debes añadir la imagen del album.\");\n        \n        setIsLoading(true);\n        const fileName = uuidv4()//crea un id unico que será el nombre de la imagen del album\n        try {\n            await uploadGenericImageApi(`albums/${fileName}`, file);\n        } catch {\n            toast.warning(\"No se pudo subir la imagen del album.\");\n            setIsLoading(false);\n        }\n        try {\n            await uploadAlbumApi(formData.name, formData.artist, fileName);\n            toast.success(\"El album se ha creado con éxito.\")\n            resetForm();\n        } catch {\n            toast.warning(\"No se pudo subir el album.\");\n            setIsLoading(false);\n        }\n        setIsLoading(false);\n        setShowModal(false);\n    };\n\n    const resetForm = () => {\n        setFile(null)\n        setFormData(FORM_INITIAL_VALUE);\n        setImgAlbum(null);\n    };\n    return (\n        <Form className=\"add-album-form\" onSubmit={handlerSubmit} onChange={handlerChange}>\n            <Form.Group>\n                <Form.Field className=\"album-avatar\" width={5}>\n                    <div { ...getRootProps() } className=\"avatar\" style={style} >\n                        <input { ...getInputProps() }/>\n                    </div>\n                    {!imgAlbum && <Image src={NoImage} />}\n                </Form.Field>\n                <Form.Field className=\"album-inputs\" width={11}>\n                    <Input placeholder=\"Nombre del album\" name=\"name\"  />\n                    <Dropdown placeholder=\"El album pertenece...\" \n                        item\n                        fluid\n                        search\n                        selection\n                        lazyLoad\n                        options={artists} \n                        onChange={handlerChange} \n                        /> \n                </Form.Field>\n            </Form.Group>\n            <Button loading={isLoading}>Añadir album</Button>\n        </Form>\n    )\n}\n","import { useDropzone } from 'react-dropzone';\nimport { toast } from 'react-toastify';\nimport {  Form, Image } from 'semantic-ui-react';\n\nimport \"./AddArtistForm.scss\";\n\nexport const Dropzone = ({ file, setUrl, classNameField, classNameDiv, setWholeFile, imageDefault }) => {\n    const {\n        getRootProps,\n        getInputProps,\n    } = useDropzone({\n        accept: \"image/jpeg, image/png\",\n        noKeyboard: true,\n        onDrop: (acceptedFile) => {\n            const fileUploated = acceptedFile[0];\n            if (!fileUploated) return toast.warning(\"La imagen no tiene un formato permitido ( jpg / png )\");\n            //VAlida que la imagen exceda de 1 Mb\n            const isGoodSize = (1000000 > fileUploated.size)\n            if (!isGoodSize) return toast.warning(\"La imagen no puede exceder de 1Mb\");\n            setWholeFile(fileUploated) \n            setUrl({\n                ...file,\n                content: URL.createObjectURL(fileUploated)\n            })\n        }\n    });\n\n    return (\n        <Form.Field className={classNameField} >\n            <div className={classNameDiv} {...getRootProps()} style={{ backgroundImage: `url('${file.content}')` }}>\n                <input {...getInputProps()} />\n                {!file.content &&<Image src={imageDefault} />}\n            </div>\n        </Form.Field>  \n    )\n}\n","export default __webpack_public_path__ + \"static/media/no-avatar.ef8b153e.png\";","export default __webpack_public_path__ + \"static/media/no-banner.5c88a03b.png\";","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport {Dropzone} from \"./Dropzone\";\nimport { Button, Form, Input } from 'semantic-ui-react';\nimport NoImageAvatar from \"../../../assets/png/no-avatar.png\";\nimport NoImageBanner from \"../../../assets/png/no-banner.png\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { uploadArtistApi, uploadGenericImageApi,  } from '../../../services/apiConnection';\n\nimport \"./AddArtistForm.scss\";\n\n//TODO: añadir genero de musica, descripcion...\n\nexport const AddArtistForm = ({ setShowModal }) => {\n    const [formData, setFormData] = useState(initialForm)\n    const [isLoading, setIsLoading] = useState(false);\n    const [fileBanner, setFileBanner] = useState(null);\n    const [fileAvatar, setFileAvatar] = useState(null);\n    const [urlBanner, setUrlBanner] = useState({\n        content: null,\n        preview: null\n    });\n    const [urlAvatar, setUrlAvatar] = useState({\n        content: null,\n        preview: null\n    })\n\n    const styleBanner = { backgroundImage: `url('${urlBanner? urlBanner : NoImageBanner}')`}\n    const styleAvatar = { backgroundImage: `url('${urlBanner ? urlBanner : NoImageAvatar}')`}\n\n    const handlerChange = (event) => {\n        setFormData({\n            ...formData,\n            [event.target.name]: event.target.value.trim()\n        })\n    }\n\n    //resetea valores del formulario\n    const resetForm = () => {\n        setFormData(initialForm);\n        setUrlBanner({\n            content: null,\n            preview: null\n        });\n        setUrlAvatar({\n            content: null,\n            preview: null\n        });\n    };\n    \n    const handlerSubmit = async (event) => {\n        event.preventDefault();\n        //Validacion de campos\n        if (!formData.name) return toast.warning(\"Debes añadir el nombre del artista.\");\n        if (!urlBanner.content) return toast.warning(\"Debes añadir el banner del artista.\");\n        if (!urlAvatar.content) return toast.warning(\"Debes añadir el avatar del artista.\");\n\n        setIsLoading(true);\n        try {\n            const uidImageBanner = uuidv4();//Genera el uid unico para la imagen banner\n            const uidImageAvatar = uuidv4();//Genera el uid unico para la imagen banner\n            await uploadGenericImageApi(`artists/banners/${uidImageBanner}`, fileBanner); //Sube el banner\n            await uploadGenericImageApi(`artists/avatars/${uidImageAvatar}`, fileAvatar); //Sube el avatar\n            await uploadArtistApi(uidImageBanner, uidImageAvatar, formData.name); //Sube el artista\n            resetForm(); //No es necesario\n            toast.success(\"El artista se ha añadido correctamente.\");\n            setIsLoading(false);\n            setShowModal(false);\n        } catch (error) {\n            toast.error(\"Ups... Algo salió mal.\");\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <Form className=\"add-artist-form\" onSubmit={handlerSubmit} onChange={handlerChange}>\n            <Dropzone classNameField={\"artist-banner\"} classNameDiv={\"banner\"} \n                file={urlBanner} setUrl={setUrlBanner} imageDefault={NoImageBanner}\n                styleMod={styleBanner}  setWholeFile={setFileBanner} />\n            <Dropzone classNameField={\"artist-avatar\"} classNameDiv={\"avatar\"} \n                file={urlAvatar} setUrl={setUrlAvatar} imageDefault={NoImageAvatar}\n                styleMod={styleAvatar} setWholeFile={setFileAvatar} />\n            <Form.Field>\n                <Input placeholder=\"Nombre del artista\" name=\"name\" />\n            </Form.Field>\n            <Button>Crear Artista</Button>\n        </Form>\n    )\n}\n\nconst initialForm = () => {\n    return {\n        name: \"\"\n    }\n};","import React, { useEffect, useState } from 'react'\nimport { Button, Dropdown, Form, Icon, Input } from 'semantic-ui-react';\nimport { toast } from 'react-toastify';\nimport { useDropzone } from 'react-dropzone';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getAlbumsOfArtistApi, getAllOfArtistApi, uploadDataSongApi, uploadFileApi } from '../../../services/apiConnection';\nimport \"./AddSongForm.scss\"\n\nconst INITIAL_FORM = {\n    name: '',\n    artist: '',\n    album: ''\n}\n\nexport const AddSongForm = ({ setShowModal }) => {\n    const [albums, setAlbums] = useState([]);\n    const [artists, setArtists] = useState([]);\n    const [artist, setArtist] = useState(null);\n    const [album, setAlbum] = useState(null)\n    const [file, setFile] = useState(null);\n    const [formData, setFormData] = useState(INITIAL_FORM);\n    const [isLoading, setIsLoading] = useState(false);\n\n    // Obtiene todos los albumes segun el artista seleccionado de la bbdd\n    useEffect(() => {\n        if (!artist) return;\n        const fetchMyAPI = async () => {\n            try {\n                const albums = await getAlbumsOfArtistApi(artist.id)\n                const arrayAlbums = [];\n                albums?.docs?.map(album => arrayAlbums.push({\n                    key: album.id,\n                    value: album.id,\n                    text: album.data().name\n                }));\n                setAlbums(arrayAlbums);\n            } catch {\n                toast.warning(\"No se pudieron cargar los álbumes del artista.\")\n            }\n        };\n        fetchMyAPI()\n    }, [artist])\n\n    //Obtiene todos los artistas de la bbdd\n    useEffect(() => {\n        const fetchMyAPI = async () => {\n            try {\n                const artists = await getAllOfArtistApi()\n                const arrayArtists = [];\n                artists?.docs?.map(artist => {\n                    arrayArtists.push({\n                        key: artist.id,\n                        value: artist.id,\n                        text: artist.data().name\n                    });\n                })\n                setArtists(arrayArtists);\n            } catch {\n                toast.warning(\"No se han podido cargar los artistas\")\n            }\n        };\n        fetchMyAPI()\n    }, [])\n\n    const { getRootProps, getInputProps } = useDropzone({\n        accept: \".mp3\",\n        noKeyboard: true,\n        onDrop: (acceptedFiles) => {\n            const file = acceptedFiles[0];\n            setFile(file)\n        }\n    })\n\n    const handlerSubmit = async (event) => {\n        event.preventDefault();\n        //Validacion de campos\n        if (!formData.name) return toast.warning(\"Debes añadir el nombre del tema.\");\n        if (!formData.artist) return toast.warning(\"Debes asignar el tema a un artista existente.\");\n        if (!file) return toast.warning(\"Debes añadir un archivo .mp3\");\n\n        setIsLoading(true);\n        const idFileSong = uuidv4(); //para id unico\n        //Sube el fichero\n        try {\n            //Sube a la bbdd el fichero y devuelve una promesa\n            await uploadFileApi(idFileSong, file);\n        } catch {\n            toast.warning(\"Hubo un error al subir el fichero.\");\n            setIsLoading(false);\n        }\n        //Sube la info del tema\n        try {\n            //Sube a la bbdd la informacion del tema\n            await uploadDataSongApi(idFileSong, formData.name, formData.album, artist.id);\n            toast.success(\"El tema se ha subido correctamente.\");\n            setIsLoading(false);\n            setShowModal(false);\n            setFormData(INITIAL_FORM);\n        } catch (err){\n            toast.warning(\"Hubo un error al guardar el tema.\");\n            setIsLoading(false);\n        }\n    };\n\n    //Cambia el estado \"artist\" al seleccionarlo en el formulario\n    const handlerChangeArtist = (event, data) => {\n        //data solo viene con el dropdown\n        //Cambia para poder filtrar sus albumes\n        setArtist({\n            'id': data.value\n        })\n        //Actualiza estado de datos de formulario\n        setFormData({\n            ...formData,\n            artist: data.value\n        })\n    };\n\n    //Cambia el estado \"album\" al seleccionarlo en el formulario\n    const handlerChangeAlbum = (event, data) => {\n        //data solo viene con el dropdown\n        setAlbum({\n            'id': data.value\n        })\n        setFormData({\n            ...formData,\n            album: data.value\n        })\n    };\n    //Actualiza el nombre del tema segun teclea el usuario\n    const handlerChangeName = (event) => {\n        setFormData({\n            ...formData,\n            name: event.target.value.trim()\n        })\n    };\n\n    return (\n        <Form className=\"add-song-form\" onSubmit={handlerSubmit} >\n            <Form.Field>\n                <Input\n                    onChange={handlerChangeName}\n                    placeholder=\"Nombre del tema\"\n                />\n            </Form.Field>\n            <Form.Field>\n                <Dropdown\n                    placeholder=\"Artistas disponibles...\"\n                    search\n                    selection\n                    lazyLoad\n                    options={artists}\n                    onChange={handlerChangeArtist}\n                />\n            </Form.Field>\n            <Form.Field>\n                <Dropdown\n                    placeholder=\"Álbumes disponibles...\"\n                    search\n                    selection\n                    lazyLoad\n                    options={albums}\n                    defaultValue=''\n                    onChange={handlerChangeAlbum}\n                />\n            </Form.Field>\n            <Form.Field>\n                <div className=\"song-upload\" {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    <Icon name=\"cloud upload\" className={file && \"load\"} />\n                    <div>\n                        {file ?\n                            (<p>Tema añadido: <span>{file.name}</span></p>)\n                            :\n                            (<p>Arrasta tu tema o haz click <span>aquí</span>.</p>)\n                        }\n                    </div>\n                </div>\n            </Form.Field>\n            <Button loading={isLoading}>Añadir tema</Button>\n        </Form>\n    )\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Icon, Menu } from \"semantic-ui-react\";\nimport { isUserAdmin } from \"../../utils/Api\";\nimport { AddAlbumForm } from \"../Albums/AddAlbumForm/AddAlbumForm\";\nimport { AddArtistForm } from \"../Artists/AddArtistForm/AddArtistForm\";\nimport { BasicModal } from \"../Modal/BasicModal/BasicModal\";\nimport { AddSongForm } from \"../Songs/AddSongForm/AddSongForm\";\n\nimport \"./MenuLeft.scss\";\n\nconst MenuLeft = ({ user, location }) => {\n  const [activeMenu, setActiveMenu] = useState(location.pathname);\n  const [userAdmin, setUserAdmin] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [titleModal, setTitleModal] = useState(\"\");\n  const [contentModal, setContentModal] = useState(\"\");\n\n  useEffect(() => {\n    setActiveMenu(location.pathname);\n  }, [location]);\n\n  //Verifica si es administrador\n  useEffect(() => {\n    isUserAdmin(user.uid)\n      .then(response => setUserAdmin(response))\n  }, [user]);\n\n  //Para mostrar indicador \"barra lateral de donde estamos\"\n  const handlerMenu = (event, menu) => {\n    //CAmbia el estado por la propiedad de Menu.Item (to) que es la direccion donde estamos\n    setActiveMenu(menu.to);\n  };\n\n  const handlerModal = (type) => {\n    switch (type) {\n      case \"artist\":\n        setTitleModal(\"Nuevo artista\");\n        setContentModal(<AddArtistForm setShowModal={setShowModal} />);\n        setShowModal(true);\n        break;\n      case \"song\":\n        setTitleModal(\"Nuevo tema\");\n        setContentModal(<AddSongForm setShowModal={setShowModal} />);\n        setShowModal(true);\n        break;\n      case \"album\":\n        setTitleModal(\"Nuevo album\");\n        setContentModal(<AddAlbumForm setShowModal={setShowModal} />);\n        setShowModal(true);\n        break;\n      default:\n        setTitleModal('');\n        setContentModal('');\n        setShowModal(false);\n        break;\n    }\n  };\n\n  return (\n    <>\n      <Menu className=\"menu-left\" vertical>\n        <div className=\"top\">\n          <Menu.Item\n            as={Link}\n            to=\"/\"\n            name=\"home\"\n            active={activeMenu === \"/\"}\n            onClick={handlerMenu}\n          >\n            <Icon name=\"home\" /> Inicio\n          </Menu.Item>\n          <Menu.Item\n            as={Link}\n            to=\"/artists\"\n            name=\"artists\"\n            active={activeMenu === \"/artists\"}\n            onClick={handlerMenu}\n          >\n            <Icon name=\"user\" /> Artistas\n          </Menu.Item>\n          <Menu.Item\n            as={Link}\n            to=\"/albums\"\n            name=\"albums\"\n            active={activeMenu === \"/albums\"}\n            onClick={handlerMenu}\n          >\n            <Icon name=\"dot circle\" /> Álbums\n          </Menu.Item>\n        </div>\n\n        {userAdmin ?\n          <div className=\"footer\">\n            <Menu.Item name=\"artist\" onClick={() => handlerModal('artist')} >\n              <Icon name=\"plus square outline\" /> Nuevo Artista\n            </Menu.Item>\n            <Menu.Item name=\"tema\" onClick={() => handlerModal('song')} >\n              <Icon name=\"plus square outline\" /> Nuevo Tema\n            </Menu.Item>\n            <Menu.Item name=\"tema\" onClick={() => handlerModal('album')} >\n              <Icon name=\"plus square outline\" /> Nuevo Álbum\n            </Menu.Item>\n\n\n            <BasicModal show={showModal} setShow={setShowModal} title={titleModal} >\n              {contentModal}\n            </BasicModal>\n          </div>\n          :\n          \"\"\n        }\n      </Menu>\n    </>\n  );\n};\n\nexport default withRouter(MenuLeft);\n","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Icon, Image, Dropdown } from \"semantic-ui-react\";\nimport { logOutApi } from \"../../services/apiConnection\";\nimport UserImage from \"../../assets/png/user.png\";\nimport \"./TopBar.scss\";\n\nconst TopBar = ({ user, history }) => {\n  //Desloguea al usuario\n  const logOut = () => logOutApi()\n\n  //Boton para retroceder de pagina\n  const goBack = () => history.goBack();\n\n  const trigger = (\n    <span >\n        <Image src={user.photoURL ? user.photoURL : UserImage} />\n        {user.displayName}\n    </span>\n  )\n\n  return (\n    <div className=\"top-bar\">\n      <div className=\"top-bar__left\">\n        <Icon name=\"angle left\" onClick={goBack} />\n      </div>\n      <div className=\"top-bar__right\">\n        <Dropdown item trigger={trigger} className=\"top-bar__right__account\">\n          <Dropdown.Menu>\n            <Link to=\"/settings\">\n                <Dropdown.Item >Cuenta</Dropdown.Item>\n            </Link>\n            <Dropdown.Item onClick={logOut}>Cerrar session <Icon name=\"power off\"  /></Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(TopBar);","import React, { useEffect, useState } from 'react';\nimport ReactPlayer from \"react-player\";\nimport { Grid, Icon, Image, Input, Progress } from 'semantic-ui-react';\n\nimport \"./Player.scss\";\n\nexport const Player = ({ songData }) => {\n    const [playedSeconds, setPlayedSeconds] = useState(0);\n    const [totalSeconds, setTotalSeconds] = useState(0);\n    const [playing, setPlaying] = useState(false)\n    const [volume, setVolume] = useState(0.4)\n    const [duration, setDuration] = useState(0)\n    const [seconds, setSeconds] = useState(0)\n    const [minutes, setMinutes] = useState(0)\n    const [totalMinutes, setTotalMinutes] = useState('')\n\n    useEffect(() => {\n        if (!songData?.url) return;\n        onStart()\n        setMinutes(0)\n        setSeconds(0)\n\n    }, [songData])\n\n    const onStart = () => {\n        setPlaying(true)\n    };\n\n    const onPause = () => {\n        setPlaying(false)\n    };\n\n    const handlerVolume = (event, data) => {\n        //Siempre debe ser de tipo number\n        setVolume(Number(data.value))\n    };\n\n    const onProgress = (data) => {\n        let playedSec = data.playedSeconds.toFixed(0)\n        playedSec /= 100\n\n        if (seconds < 60) setSeconds(prev => prev + 1)\n\n        if (seconds >= 59) {\n            setSeconds(0)\n            const currentMinutes = minutes + 1\n            setMinutes(currentMinutes)\n        }\n        setPlayedSeconds(data.playedSeconds.toFixed(0))\n        setTotalSeconds(data.loadedSeconds)\n        \n        let total = ''\n        if (seconds < 10) total = `${minutes}:0${seconds}`\n        else total = `${minutes}:${seconds}`\n        \n        setTotalMinutes(total)\n    };\n    const onDuration = (data) => {\n        let duration = data / 60\n        duration = duration.toFixed(2)\n        if (duration % 1 > .60) {\n            let decimal = duration % 1\n            let entero = Math.floor(duration)\n            entero += 1\n            decimal = decimal * 10\n            decimal = decimal.toFixed(1) % 1\n            decimal = decimal / 10\n            duration = entero + decimal\n        }\n        setDuration(duration)\n    };\n\n    const toggleMuted = (event, data) => {\n        if (volume !== 0) {\n            setVolume(0)\n            return \n        }\n        setVolume(0.5)\n    };\n    \n    return (\n        <div className=\"player\">\n            <Grid>\n                <Grid.Column width={6} className=\"left\">\n                    <Image src={songData?.image} />\n                    {songData?.name}\n                </Grid.Column>\n                <Grid.Column width={6} className=\"center\">\n                    <div className=\"controls\">\n                        {playing ?\n                            (<Icon name=\"pause\" onClick={onPause} />)\n                            :\n                            (<Icon name=\"play\" onClick={onStart} />)\n                        }\n                    </div>\n                    <div className=\"bar_time\">\n                        <div className=\"numbers\">\n                            {totalMinutes ? totalMinutes : '0:00'}\n                        </div>\n                        <Progress\n                            progress=\"value\"\n                            value={playedSeconds}\n                            total={totalSeconds}\n                            size=\"tiny\"\n                        />\n                        <div className=\"numbers\">\n                            {duration ? duration.toString().replace('.', ':') : '0:00'}\n                        </div>\n                    </div>\n                </Grid.Column>\n                <Grid.Column width={4} className=\"right\">\n                    <Input\n                        label={<Icon name={(volume!==0)? \"volume up\" : \"volume off\"} onClick={toggleMuted}/>}\n                        type=\"range\"\n                        max={1}\n                        min={0}\n                        step={0.01}\n                        name=\"volume\"\n                        onChange={handlerVolume}\n                        value={volume}\n                    />\n                </Grid.Column>\n                <ReactPlayer\n                    className=\"react-player\"\n                    url={songData?.url}\n                    playing={playing}\n                    height=\"0\"\n                    width=\"0\"\n                    volume={volume}\n                    onProgress={onProgress}\n                    onDuration={onDuration}\n                />\n            </Grid>\n        </div>\n    )\n}\n","import React, { useState } from 'react';\nimport { Grid } from \"semantic-ui-react\";\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Routes } from '../../routes/Routes';\nimport MenuLeft from '../../components/MenuLeft/MenuLeft';\nimport TopBar from '../../components/TopBar/TopBar';\nimport { Player } from '../../components/Player/Player';\nimport { getUrlSongApi } from '../../services/apiConnection';\n\nimport \"./LoggedLayout.scss\";\n\nexport const LoggedLayout = ({ user, setReloadApp }) => {\n    const [songData, setSongData] = useState(null);\n\n    const playerSong = (image, songName, idSong) => {\n        getUrlSongApi(idSong)\n                .then(url => {\n                    setSongData({\n                        url,\n                        image: image,\n                        name: songName\n                    })\n                })\n                .catch()\n    };\n\n    return (\n        <Router>\n            <Grid className=\"logged-layout\">\n                <Grid.Row>\n                    <Grid.Column width={3}>\n                        <MenuLeft user={user} />\n                    </Grid.Column>\n                    <Grid.Column className=\"content\" width={13}>\n                        <TopBar user={user}/>\n                        <Routes user={user} setReloadApp={setReloadApp} playerSong={playerSong} />\n                    </Grid.Column>\n                </Grid.Row>\n                <Grid.Row>\n                    <Grid.Column width={16}>\n                        <Player songData={songData} />\n                    </Grid.Column>\n                </Grid.Row>\n            </Grid>\n        </Router>\n    )\n}\n","import React, { useState } from 'react';\nimport { toast, ToastContainer } from 'react-toastify'\nimport firebase from './utils/Firebase';\nimport \"firebase/auth\"\nimport { Auth } from './pages/Auth/Auth';\nimport { LoggedLayout } from './layouts/LoggedLayout/LoggedLayout';\nimport { logOutApi } from './services/apiConnection';\n\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [reloadApp, setReloadApp] = useState(false)\n\n  //Comprueba si el usuario ha cambiado de estado -> verificacion de email\n  firebase.auth().onAuthStateChanged(currentUser => {\n    //Si el usuario ha confirmado el email... ( ? por si la propiedad no existieses )\n    if (currentUser?.emailVerified) setUser(currentUser);\n    else{\n      logOutApi() //deslogua porque no tiene el email verificado\n      setUser(null);\n    }\n    setIsLoading(false);\n  });\n\n  if (isLoading) return null;\n  \n  return(\n    <>\n      { user ? <LoggedLayout to=\"/\" user={user} setReloadApp={setReloadApp} /> : <Auth /> }\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        hideProgressBar\n        newestOnTop\n        closeOnClick\n        rtl={false}\n        draggable\n        pauseOnHover={false}\n      />\n    </>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"slick-carousel/slick/slick.css\"; \nimport \"slick-carousel/slick/slick-theme.css\";\n\nimport './index.scss';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}